[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/introduction/index.html",
    "href": "posts/introduction/index.html",
    "title": "Hello",
    "section": "",
    "text": "Hi, my name is Faith and I am a junior at the University of Nebraska-Lincoln. I am double-majoring in advertising and public relations & sports media and communication with a minor in fashion merchandising. My excitement for the world of journalism and advertising started in high school when I became part of my school’s digital media and newspaper classes. After writing stories, producing my own videos, and covering my school’s athletics, I knew this is the field that I wanted to go into. I’m excited to continually learn and get experience in data journalism, specifically pertaining to sports!"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Blog",
    "section": "",
    "text": "CHANGE THIS TO BE THE TITLE OF YOUR POST\n\n\n\n\n\n\n\nlowercaseword\n\n\nlowercaseword\n\n\nlowercaseword\n\n\n\n\n\n\n\n\n\n\n\nNov 11, 2023\n\n\nTHIS IS YOUR NAME\n\n\n\n\n\n\n  \n\n\n\n\nHello\n\n\n\n\n\n\n\nsports\n\n\ndata\n\n\ncode\n\n\n\n\n\n\n\n\n\n\n\nOct 30, 2023\n\n\nFaith Worden\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/husker-volleyball-2023-season-compared-to-the-former-national-champs/index.html",
    "href": "posts/husker-volleyball-2023-season-compared-to-the-former-national-champs/index.html",
    "title": "CHANGE THIS TO BE THE TITLE OF YOUR POST",
    "section": "",
    "text": "copy and paste code here\nChart 1\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(ggalt)\n\n\nRegistered S3 methods overwritten by 'ggalt':\n  method                  from   \n  grid.draw.absoluteGrob  ggplot2\n  grobHeight.absoluteGrob ggplot2\n  grobWidth.absoluteGrob  ggplot2\n  grobX.absoluteGrob      ggplot2\n  grobY.absoluteGrob      ggplot2\n\n\nCode\nlibrary(ggbeeswarm)\nlibrary(ggrepel)\nlibrary(ggbump)\n\nassists2017 &lt;- read_csv('totalassists2017.csv')\n\n\nRows: 150 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): Player, Cl, Ht, Pos\ndbl (2): Rank, S\nnum (1): Assists\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nassistsclean2017 &lt;- assists2017 |&gt;\n  separate(Player, into=c(\"Player\", \"School\"), sep=\",\") |&gt;\n  mutate(School = gsub(\"(FL)\", \"FL\", School, fixed=TRUE)) |&gt;\n  mutate(School = gsub(\"(NY)\", \"NY\", School, fixed=TRUE)) |&gt;\n  mutate(School = gsub(\"(PA)\", \"PA\", School, fixed=TRUE)) |&gt;\n  separate(School, into=c(\"School\", \"Conference\"), sep=\"\\\\(\") |&gt; \n  mutate(Conference=gsub(\")\", \"\", Conference))\n\nassistsperset2017 &lt;- assistsclean2017 |&gt;\n  mutate(AssistsPerSet = Assists/S)\n\nkh &lt;- assistsperset2017 |&gt;\n  filter(Player == \"Kelly Hunter\")\n\nassists2023 &lt;- read_csv('totalassists2023.csv')\n\n\nRows: 150 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): Player, Cl, Ht, Pos\ndbl (2): Rank, S\nnum (1): Assists\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\n assistsclean2023 &lt;- assists2023 |&gt;\n  separate(Player, into=c(\"Player\", \"School\"), sep=\",\") |&gt;\n  mutate(School = gsub(\"(FL)\", \"FL\", School, fixed=TRUE)) |&gt;\n  mutate(School = gsub(\"(NY)\", \"NY\", School, fixed=TRUE)) |&gt;\n  mutate(School = gsub(\"(PA)\", \"PA\", School, fixed=TRUE)) |&gt;\n  separate(School, into=c(\"School\", \"Conference\"), sep=\"\\\\(\") |&gt; \n  mutate(Conference=gsub(\")\", \"\", Conference))\n\nassistsperset2023 &lt;- assistsclean2023 |&gt;\n  mutate(AssistsPerSet = Assists/S)\n\nbr &lt;- assistsperset2023 |&gt;\n  filter(Player == \"Bergen Reilly\")\n\nggplot() +\n  geom_point(data=assistsperset2017, aes(x=S, y=AssistsPerSet), color=\"dark grey\") +\n geom_point(data=assistsperset2023, aes(x=S, y=AssistsPerSet), color=\"light grey\") +\n  geom_point(data=br, aes(x=S, y=AssistsPerSet), color=\"red\") +\n  geom_point(data=kh, aes(x=S, y=AssistsPerSet), color=\"maroon\") +\n   geom_text(data=br, aes(x=S-.09, y=AssistsPerSet-1, label=Player)) + \n  geom_text(data=kh, aes(x=S-.9, y=AssistsPerSet-1, label=Player)) +\ngeom_encircle(data=br, aes(x=S-.9, y=AssistsPerSet-0), s_shape=.1, expand=-.04, colour=\"red\") + \n  geom_encircle(data=kh,  aes(x=S-.3, y=AssistsPerSet-0), s_shape=.1, expand=-.05, colour=\"maroon\") + \nlabs(x=\"Sets\", y=\"Assists per set\", title=\"Is freshman Bergen Reilly keeping pace with a national championship winning setter?\", subtitle=\"During the 2017-18 championship winning Husker volleyball era, setter Kelly Hunter was a senior. \nNow, freshman Bergen Reilly is keeping up with her pace at that time when it comes to assists per set.\",  caption=\"Source: NCAA | By Faith Worden\") +\n  theme_minimal () +\n  theme(\n  plot.title = element_text(size = 10, face = \"bold\"),\n    axis.title = element_text(size = 7.5), \n    plot.subtitle = element_text(size=8.5), \n    panel.grid.minor = element_blank(),\n    plot.title.position = \"plot\"\n)\n\n\n\n\n\nsdlkjfwlkjfdlskjdvlkjsd\n\n\nCode\nhitting2017 &lt;- read_csv('hittingpct2017.csv')\n\n\nRows: 150 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): Player, Cl, Ht, Pos\ndbl (5): Rank, S, Kills, Errors, Pct.\nnum (1): Total Attacks\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nhittingpct2017 &lt;- hitting2017 |&gt;\n  separate(Player, into=c(\"Player\", \"School\"), sep=\",\") |&gt;\n  mutate(School = gsub(\"(FL)\", \"FL\", School, fixed=TRUE)) |&gt;\n  mutate(School = gsub(\"(NY)\", \"NY\", School, fixed=TRUE)) |&gt;\n  mutate(School = gsub(\"(PA)\", \"PA\", School, fixed=TRUE)) |&gt;\n  mutate(School = gsub(\"(OH)\", \"OH\", School, fixed=TRUE)) |&gt;\n  mutate(School = gsub(\"(CA)\", \"CA\", School, fixed=TRUE)) |&gt;\n  separate(School, into=c(\"School\", \"Conference\"), sep=\"\\\\(\") |&gt; \n  mutate(Conference=gsub(\")\", \"\", Conference))\n\nbh &lt;- hittingpct2017 |&gt;\n  filter(Player == \"Briana Holman\")\n\nhitting2023 &lt;- read_csv('hittingpct2023.csv')\n\n\nRows: 150 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): Player, Cl, Ht, Pos\ndbl (6): Rank, S, Kills, Errors, Total Attacks, Pct.\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nhittingpct2023 &lt;- hitting2023 |&gt;\n  separate(Player, into=c(\"Player\", \"School\"), sep=\",\") |&gt;\n  mutate(School = gsub(\"(FL)\", \"FL\", School, fixed=TRUE)) |&gt;\n  mutate(School = gsub(\"(NY)\", \"NY\", School, fixed=TRUE)) |&gt;\n  mutate(School = gsub(\"(PA)\", \"PA\", School, fixed=TRUE)) |&gt;\n  mutate(School = gsub(\"(CA)\", \"CA\", School, fixed=TRUE)) |&gt;\n  separate(School, into=c(\"School\", \"Conference\"), sep=\"\\\\(\") |&gt; \n  mutate(Conference=gsub(\")\", \"\", Conference))\n\naj &lt;- hittingpct2023 |&gt;\n  filter(Player == \"Andi Jackson\")\n\nggplot() + \n  geom_beeswarm(\n    data=hittingpct2023, \n    aes(x=`Pct.`, y=`Pos`), color=\"light grey\") + \n  geom_beeswarm(\n    data=hittingpct2017, \n    aes(x=`Pct.`, y=`Pos`), color=\"dark grey\") + \n   geom_beeswarm(\n    data=aj, \n    aes(x=`Pct.`, y=`Pos`), color=\"red\") + \n    geom_beeswarm(\n    data=bh, \n    aes(x=`Pct.`, y=`Pos`), color=\"maroon\") +\n  geom_text_repel(\n    data=bh, \n    aes(x=`Pct.`, y=`Pos`, label=Player)) +\n  geom_text_repel(\n    data=aj, \n    aes(x=`Pct.`, y=`Pos`, label=Player)) +\nlabs(x=\"Hitting Pct.\", y=\"Position\", title=\"Andi Jackson swings her way ahead of the rest\", subtitle=\"Freshman Andi Jackson, setter for NU, ranks at No.25 for hitting percentage this season. In 2017, Holman ended at No. 60.\",  caption=\"Source: NCAA | By Faith Worden\") +\n  theme_minimal() +\n  theme(\n  plot.title = element_text(size = 12, face = \"bold\"),\n    axis.title = element_text(size = 7.5), \n    plot.subtitle = element_text(size=7.5), \n    panel.grid.minor = element_blank(),\n    plot.title.position = \"plot\"\n)\n\n\n\n\n\nlkjfslkjdflskjdflksj\n\n\nCode\nwinsloss2017 &lt;- read_csv(\"winsloss2017.csv\") |&gt; mutate(Season = 2017)\n\n\nRows: 333 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Team\ndbl (4): Rank, W, L, Pct.\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nwinsloss2018 &lt;- read_csv(\"winsloss2018.csv\") |&gt; mutate(Season = 2018)\n\n\nRows: 334 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Team\ndbl (4): Rank, W, L, Pct.\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nwinsloss2019 &lt;- read_csv(\"winsloss2019.csv\") |&gt; mutate(Season = 2019)\n\n\nRows: 332 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Team\ndbl (4): Rank, W, L, Pct.\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nwinsloss2020 &lt;- read_csv(\"winsloss2020.csv\") |&gt; mutate(Season = 2020)\n\n\nRows: 306 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Team\ndbl (4): Rank, W, L, Pct.\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nwinsloss2021 &lt;- read_csv(\"winsloss2021.csv\") |&gt; mutate(Season = 2021)\n\n\nRows: 332 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Team\ndbl (4): Rank, W, L, Pct.\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nwinsloss2022 &lt;- read_csv(\"winsloss2022.csv\") |&gt; mutate(Season = 2022)\n\n\nRows: 334 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Team\ndbl (4): Rank, W, L, Pct.\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nwinsloss2023 &lt;- read_csv(\"winsloss2023.csv\") |&gt; mutate(Season = 2023)\n\n\nRows: 332 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Team\ndbl (4): Rank, W, L, Pct.\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nnu2017 &lt;- winsloss2017 |&gt;\n  filter (Team == \"Nebraska (Big Ten)\")\n\nwinsloss &lt;- bind_rows(winsloss2017, winsloss2018, winsloss2019, winsloss2020, winsloss2021, winsloss2022, winsloss2023) |&gt;\nfilter(Rank &lt;= 25) \n\nnuwinsloss &lt;- winsloss |&gt; filter(Team == \"Nebraska (Big Ten)\")\n\nkentuckywinsloss &lt;- winsloss |&gt; filter(Team == \"Kentucky (SEC)\")\n\ntexaswinsloss &lt;- winsloss |&gt; filter(Team == \"Texas (Big 12)\")\n\nggplot() +\n  geom_line(data=winsloss, aes(x=Season, y=`Pct.`, group=Team), color=\"light grey\") +\n  geom_line(data=nuwinsloss, aes(x=Season, y=`Pct.`, group=Team), color=\"red\") +\n  geom_point(data=nuwinsloss, aes(x=Season, y=`Pct.`, group=Team), color=\"red\") +\n  geom_line(data=kentuckywinsloss, aes(x=Season, y=`Pct.`, group=Team), color=\"#0033A0\") +\ngeom_line(data=texaswinsloss, aes(x=Season, y=`Pct.`, group=Team), color=\"#BF5700\") +\nlabs(x=\"Season\", y=\"Win Pct.\", title=\"Nebraska's on top, but hasn't always been\", subtitle=\"Nebraska, Kentucky and Texas are some of the several national championship winners in the last few years. \nBut, Nebraska's looking hot this season, and is doing better as of now against championship winning teams. \",  caption=\"Source: NCAA | By Faith Worden\") +\n  theme_minimal() +\n  theme(\n  plot.title = element_text(size = 12, face = \"bold\"),\n    axis.title = element_text(size = 10), \n    plot.subtitle = element_text(size=8.5), \n    panel.grid.minor = element_blank(),\n    plot.title.position = \"plot\"\n)"
  }
]